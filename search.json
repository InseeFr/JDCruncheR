[{"path":"https://inseefr.github.io/JDCruncheR/articles/Lancement_cruncher.html","id":"à-propos-du-cruncher","dir":"Articles","previous_headings":"","what":"À propos du cruncher","title":"Le lancement du cruncher avec JDCruncheR","text":"Pour éviter que le présent package (JDCruncheR) ne soit trop volumineux, il ne contient pas le cruncher de JDemetra+. Ce dernier peut être téléchargé à l’adresse suivante: https://github.com/jdemetra/jdemetra-app/releases. Pour plus d’informations sur l’installation du cruncher et sa configuration avec une version portable de Java, voir le wiki de JDCruncheR : https://github.com/InseeFr/JDCruncheR/wiki/Installation-&-configuration. Pour lancer le cruncher de JDemetra+, il faut trois éléments : un fichier contenant les paramètres sur la méthode de rafraîchissement à utiliser pour mettre le workspace à jour ; un workspace valide de JDemetra+ ; le chemin d’accès au cruncher. Dans le package JDCruncheR, il existe trois fonctions associées au lancement du cruncher : create_param_file() qui permet de créer le fichier de paramètres ; cruncher() qui permet de lancer le cruncher sur un workspace à partir d’un fichier de paramètres ; cruncher_and_param() qui permet de lancer le cruncher tout en créant le fichier de paramètres et de personnaliser certaines sorties du cruncher.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/articles/Lancement_cruncher.html","id":"création-du-fichier-de-paramètres-avec-create_param_file","dir":"Articles","previous_headings":"","what":"Création du fichier de paramètres avec create_param_file()","title":"Le lancement du cruncher avec JDCruncheR","text":"Les paramètres de la fonction create_param_file() sont les mêmes que ceux décrits dans le wiki du cruncher de JDemetra+ (https://github.com/jdemetra/jwsacruncher/wiki). Les trois paramètres les plus importants de create_param_file() sont : policy qui est la méthode de rafraîchissement utilisée (voir tableau ci-dessous). Les différentes politiques de rafraîchissement matrix_item qui est une chaîne de caractères contenant les noms des paramètres à exporter. Par défaut, ce sont ceux de l’option default_matrix_item. peut donc au choix modifier l’option default_matrix_item ou le paramètre matrix_item : tsmatrix_series qui est une chaîne de caractères contenant les noms des paramètres à exporter. Par défaut, ce sont ceux de l’option default_tsmatrix_series. peut donc au choix modifier l’option default_tsmatrix_series ou le paramètre tsmatrix_series : Pour voir l’ensemble des paramètres, il suffit d’utiliser sous R la commande ?create_param_file. Après cela, il ne reste plus qu’à créer le fichier de paramètres. Ci-dessous quelques exemples.","code":"library(\"JDCruncheR\") # Pour afficher les paramètres par défaut : getOption(\"default_matrix_item\") # Pour modifier les paramètres par défaut pour n'exporter par exemple # que les critères d'information : options(default_matrix_item = c(     \"likelihood.aic\",     \"likelihood.aicc\",     \"likelihood.bic\",     \"likelihood.bicc\" )) # Pour afficher les paramètres par défaut : getOption(\"default_tsmatrix_series\") # Pour modifier les paramètres par défaut pour n'exporter par exemple que # la série désaisonnalisée et ses prévisions : options(default_tsmatrix_series = c(\"sa\", \"sa_f\")) # Un fichier parametres.param sera créé sous D:/ avec la politique de rafraîchissement # \"lastoutliers\" et les autres paramètres par défaut create_param_file(     dir_file_param = \"D:/\",     policy = \"lastoutliers\" )  # Si l'on a modifié les options \"default_matrix_item\" et \"default_tsmatrix_series\" pour # n'exporter que les critères d'information, la série désaisonnalisée et ses # prévisions, la commande précédente est équivalent à : create_param_file(     dir_file_param = \"D:/\",     policy = \"lastoutliers\",     matrix_item = c(         \"likelihood.aic\", \"likelihood.aicc\",         \"likelihood.bic\", \"likelihood.bicc\"     ),     tsmatrix_series = c(\"sa\", \"sa_f\") )"},{"path":"https://inseefr.github.io/JDCruncheR/articles/Lancement_cruncher.html","id":"lancement-du-cruncher","dir":"Articles","previous_headings":"","what":"Lancement du cruncher","title":"Le lancement du cruncher avec JDCruncheR","text":"Pour lancer le cruncher avec cruncher() ou cruncher_and_param(), il faut spécifier le chemin d’accès au dossier contenant le cruncher (paramètre cruncher_bin_directory) ainsi que celui du workspace à traiter (paramètre workspace). Par défaut, le chemin d’accès au dossier du cruncher est celui contenu dans le paramètre cruncher_bin_directory : il suffit donc de modifier une seule fois cette option afin qu’elle s’applique à toutes les exécutions du cruncher. Le chemin à indiquer est celui du dossier contenant le fichier jwsacruncher.bat, situé dans le dossier “Bin” du dossier d’installation du cruncher. Ainsi, s’il été installé sous D:\\jdemetra-cli-2.2.3, le fichier jwsacruncher.bat sera présent sous D:\\jdemetra-cli-2.2.3\\bin. Il faut donc modifier l’option cruncher_bin_directory de la façon suivante : Si aucun chemin de workspace n’est renseigné, une fenêtre s’ouvre, invitant à sélectionner le workspace sur lequel souhaite lancer le cruncher. La fonction cruncher_and_param() permet de créer un fichier temporaire de paramètres via la fonction create_param_file(), pour ensuite lancer le cruncher via la fonction cruncher(). En plus des paramètres disponibles dans ces deux fonctions, cruncher_and_param() permet de renommer le dossier contenant les résultats du workspace afin qu’ils soient égaux aux noms des multi-documents affichés dans l’application JDemetra+ grâce au paramètre rename_multi_documents (par défaut rename_multi_documents = TRUE : les dossiers sont renommés). Ci-dessous quelques exemples d’utilisation.","code":"options(cruncher_bin_directory = \"D:/jdemetra-cli-2.2.3/bin/\") # La commande suivante permet de mettre à jour le workspace \"ipi\" présent sous # D:/Campagne_CVS/ avec l'option de rafraîchissement \"lastoutliers\". Les autres # options de lancement du cruncher sont ceux par défaut de la fonction create_param_file(). # En particulier, les paramètres exportés sont ceux des options \"default_matrix_item\" # et \"default_tsmatrix_series\", et les résultats sortent sous D:/Campagne_CVS/Output/. cruncher_and_param(     workspace = \"D:/Campagne_CVS/ipi.xml\",     rename_multi_documents = FALSE,     policy = \"lastoutliers\" )  # Utilisation du paramètre \"output\" pour changer le dossier contenant les résultats : cruncher_and_param(     workspace = \"D:/Campagne_CVS/ipi.xml\",     output = \"D:/Resultats campagne/\",     rename_multi_documents = FALSE,     policy = \"lastoutliers\" )  # Pour modifier les noms des dossiers contenant les sorties afin qu'ils soient égaux # aux noms des multi-documents affichés dans l'application JDemetra+, il suffit # d'utiliser le paramètre \"rename_multi_documents = TRUE\" (valeur par défaut). # Le paramètre \"delete_existing_file = TRUE\" permet, lui, de supprimer les éventuels # dossiers existants portant le même nom qu'un des multi-documents. cruncher_and_param(     workspace = \"D:/Campagne_CVS/ipi.xml\",     rename_multi_documents = TRUE,     delete_existing_file = TRUE,     policy = \"lastoutliers\" )  # Pour voir les autres paramètres de la fonction : ?cruncher_and_param"},{"path":"https://inseefr.github.io/JDCruncheR/articles/Lancement_cruncher_pdf.html","id":"à-propos-du-cruncher","dir":"Articles","previous_headings":"","what":"À propos du cruncher","title":"Le lancement du cruncher avec JDCruncheR pdf","text":"Pour éviter que le présent package (JDCruncheR) ne soit trop volumineux, il ne contient pas le cruncher de JDemetra+. Ce dernier peut être téléchargé à l’adresse suivante: https://github.com/jdemetra/jdemetra-app/releases. Pour plus d’informations sur l’installation du cruncher et sa configuration avec une version portable de Java, voir le wiki de JDCruncheR : https://github.com/InseeFr/JDCruncheR/wiki/Installation-&-configuration. Pour lancer le cruncher de JDemetra+, il faut trois éléments : un fichier contenant les paramètres sur la méthode de rafraîchissement à utiliser pour mettre le workspace à jour ; un workspace valide de JDemetra+ ; le chemin d’accès au cruncher. Dans le package JDCruncheR, il existe trois fonctions associées au lancement du cruncher : create_param_file() qui permet de créer le fichier de paramètres ; cruncher() qui permet de lancer le cruncher sur un workspace à partir d’un fichier de paramètres ; cruncher_and_param() qui permet de lancer le cruncher tout en créant le fichier de paramètres et de personnaliser certaines sorties du cruncher.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/articles/Lancement_cruncher_pdf.html","id":"création-du-fichier-de-paramètres-avec-create_param_file","dir":"Articles","previous_headings":"","what":"Création du fichier de paramètres avec create_param_file()","title":"Le lancement du cruncher avec JDCruncheR pdf","text":"Les paramètres de la fonction create_param_file() sont les mêmes que ceux décrits dans le wiki du cruncher de JDemetra+ (https://github.com/jdemetra/jwsacruncher/wiki). Les trois paramètres les plus importants de create_param_file() sont : policy qui est la méthode de rafraîchissement utilisée (voir tableau ci-dessous). matrix_item qui est une chaîne de caractères contenant les noms des paramètres à exporter. Par défaut ce sont ceux de l’option default_matrix_item. peut donc au choix modifier l’option default_matrix_item ou le paramètre matrix_item : tsmatrix_series qui est une chaîne de caractères contenant les noms des paramètres à exporter. Par défaut ce sont ceux de l’option default_tsmatrix_series. peut donc au choix modifier l’option default_tsmatrix_series ou le paramètre tsmatrix_series : Pour voir l’ensemble des paramètres, il suffit d’utiliser sous R la commande ?create_param_file. Après cela, il ne reste plus qu’à créer le fichier de paramètres. Ci-dessous quelques exemples.","code":"library(\"JDCruncheR\") # Pour afficher les paramètres par défaut : getOption(\"default_matrix_item\") # Pour modifier les paramètres par défaut pour n'exporter par exemple # que les critères d'information : options(default_matrix_item = c(     \"likelihood.aic\",     \"likelihood.aicc\",     \"likelihood.bic\",     \"likelihood.bicc\" )) # Pour afficher les paramètres par défaut : getOption(\"default_tsmatrix_series\") # Pour modifier les paramètres par défaut pour n'exporter par exemple que # la série désaisonnalisées et ses prévisions : options(default_tsmatrix_series = c(\"sa\", \"sa_f\")) # Un fichier parametres.param sera créé sous D:/ avec la politique de rafraîchissement # \"lastoutliers\" et les autres paramètres par défaut create_param_file(     dir_file_param = \"D:/\",     policy = \"lastoutliers\" )  # Si l'on a modifié les options \"default_matrix_item\" et \"default_tsmatrix_series\" pour # n'exporter que les critères d'information, la série désaisonnalisée et ses # prévisions, la commande précédente est équivalent à : create_param_file(     dir_file_param = \"D:/\",     policy = \"lastoutliers\",     matrix_item = c(         \"likelihood.aic\", \"likelihood.aicc\",         \"likelihood.bic\", \"likelihood.bicc\"     ),     tsmatrix_series = c(\"sa\", \"sa_f\") )"},{"path":"https://inseefr.github.io/JDCruncheR/articles/Lancement_cruncher_pdf.html","id":"lancement-du-cruncher","dir":"Articles","previous_headings":"","what":"Lancement du cruncher","title":"Le lancement du cruncher avec JDCruncheR pdf","text":"Pour lancer le cruncher avec cruncher() ou cruncher_and_param(), il faut spécifier le chemin d’accès au dossier contenant le cruncher (paramètre cruncher_bin_directory) ainsi que celui du workspace à traiter (paramètre workspace). Par défaut, le chemin d’accès au dossier du cruncher est celui contenu dans le paramètre cruncher_bin_directory : il suffit donc de modifier une seule fois cette option afin qu’elle s’applique à toutes les exécutions du cruncher. Le chemin à indiquer est celui du dossier contenant le fichier jwsacruncher.bat, situé dans le dossier “Bin” du dossier d’installation du cruncher. Ainsi, s’il été installé sous D:\\jdemetra-cli-2.2.3, le fichier jwsacruncher.bat sera présent sous D:\\jdemetra-cli-2.2.3\\bin. Il faut donc modifier l’option cruncher_bin_directory de la façon suivante : Si aucun chemin de workspace n’est selectionné, une fenêtre s’ouvre, invitant à sélectionner le workspace sur lequel souhaite lancer le cruncher. La fonction cruncher_and_param() permet de créer un fichier temporaire de paramètres via la fonction create_param_file(), pour ensuite lancer le cruncher via la fonction cruncher(). En plus des paramètres disponibles dans ces deux fonctions, cruncher_and_param() permet de renommer le dossier contenant les résultats du workspace afin qu’ils soient égaux aux noms des multi-documents affichés dans l’application JDemetra+ grâce au paramètre rename_multi_documents (par défaut rename_multi_documents = TRUE : les dossiers sont renommés). Ci-dessous quelques exemples d’utilisation.","code":"options(cruncher_bin_directory = \"D:/jdemetra-cli-2.2.3/bin/\") # La commande suivante permet de mettre à jour le workspace \"ipi\" présent sous # D:/Campagne_CVS/ avec l'option de rafraîchissement \"lastoutliers\". Les autres # options de lancement du cruncher sont ceux par défaut de la fonction create_param_file(). # En particulier, les paramètres exportés sont ceux des options \"default_matrix_item\" # et \"default_tsmatrix_series\", et les résultats sortent sous D:/Campagne_CVS/Output/. cruncher_and_param(     workspace = \"D:/Campagne_CVS/ipi.xml\",     rename_multi_documents = FALSE,     policy = \"lastoutliers\" )  # Utilisation du paramètre \"output\" pour changer le dossier contenant les résultats : cruncher_and_param(     workspace = \"D:/Campagne_CVS/ipi.xml\",     output = \"D:/Resultats campagne/\",     rename_multi_documents = FALSE,     policy = \"lastoutliers\" )  # Pour modifier les noms des dossiers contenant les sorties afin qu'ils soient égaux # aux noms des multi-documents affichés dans l'application JDemetra+ il suffit # d'utiliser le paramètre \"rename_multi_documents = TRUE\" (valeur par défaut). # Le paramètre \"delete_existing_file = TRUE\" permet, lui, de supprimer éventuels # dossiers existants portant le même nom qu'un des multi-documents. cruncher_and_param(     workspace = \"D:/Campagne_CVS/ipi.xml\",     rename_multi_documents = TRUE,     delete_existing_file = TRUE,     policy = \"lastoutliers\" )  # Pour voir les autres paramètres de la fonction : ?cruncher_and_param"},{"path":"https://inseefr.github.io/JDCruncheR/articles/Using_the_cruncher_with_JDCruncheR.html","id":"about-the-cruncher","dir":"Articles","previous_headings":"","what":"About the cruncher","title":"Using the cruncher with JDCruncheR","text":"prevent package voluminous, contain JDemetra+ cruncher. Said cruncher can downloaded : https://github.com/jdemetra/jdemetra-app/releases. information cruncher installation set portable version Java, please refer JDCruncheR wiki: https://github.com/InseeFr/JDCruncheR/wiki/Installation-&-configuration. JDemetra+ cruncher requires three elements function: settings file containing refresh policy parameters apply workspace; valid JDemetra+ workspace; path cruncher directory. JDCruncheR package, three functions cruncher-related: create_param_file() generates settings file; cruncher() crunches workspace pre-generated settings file; cruncher_and_param() generates settings file crunches workspace. function, cruncher output can also customised.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/articles/Using_the_cruncher_with_JDCruncheR.html","id":"generating-the-settings-file-with-create_param_file","dir":"Articles","previous_headings":"","what":"Generating the settings file with create_param_file()","title":"Using the cruncher with JDCruncheR","text":"arguments function create_param_file() described JDemetra+ cruncher wiki (https://github.com/jdemetra/jwsacruncher/wiki). three main arguments : policy, refresh policy: refresh/revision policies matrix_item list containing names parameters export. default, names contained default_matrix_item option. Thus, user can either modify default_matrix_item option matrix_item option: tsmatrix_series list containing names parameters export. default, names contained default_tsmatrix_series option. Thus, user can either modify default_tsmatrix_series option tsmatrix_series option: visualise parameters can used customise options, enter ?create_param_file (R). use cases function create_param_file():","code":"library(\"JDCruncheR\") # To see the default parameters: getOption(\"default_matrix_item\") # To customise the parameter selection (here, only the information criteria are exported): options(default_matrix_item = c(     \"likelihood.aic\",     \"likelihood.aicc\",     \"likelihood.bic\",     \"likelihood.bicc\" )) # To see the default parameters: getOption(\"default_tsmatrix_series\") # To customise the parameter selection (here, only the seasonaly adjusted series and its previsions are exported): options(default_tsmatrix_series = c(\"sa\", \"sa_f\")) # A .param parameters file will be created in D:/, containing the \"lastoutliers\" refresh policy # and default values for the other parameters create_param_file(     dir_file_param = \"D:/\",     policy = \"lastoutliers\" )  # To customise the \"default_matrix_item\" and \"default_tsmatrix_series\" options # to only export the information criteria, the adjusted series and its forecast: create_param_file(     dir_file_param = \"D:/\",     policy = \"lastoutliers\",     matrix_item = c(         \"likelihood.aic\", \"likelihood.aicc\",         \"likelihood.bic\", \"likelihood.bicc\"     ),     tsmatrix_series = c(\"sa\", \"sa_f\") )"},{"path":"https://inseefr.github.io/JDCruncheR/articles/Using_the_cruncher_with_JDCruncheR.html","id":"launching-the-cruncher","dir":"Articles","previous_headings":"","what":"Launching the cruncher","title":"Using the cruncher with JDCruncheR","text":"crunch workspace functions cruncher() cruncher_and_param(), paths cruncher workspace must specified via two parameters, cruncher_bin_directory workspace. declared, path cruncher (stored parameter cruncher_bin_directory) valid cruncher executions. path must refer jwsacruncher.bat file location, within “bin” installation folder. example, cruncher installed D:\\jdemetra-cli-2.2.3, jwsacruncher.bat file D:\\jdemetra-cli-2.2.3\\bin. code declare path via cruncher_bin_directory parameter : path workspace specified, window opens manual workspace selection. function cruncher_and_param() creates temporary parameters file calling create_param_file(), used function cruncher() crunch workspace. addition parameters used two functions, cruncher_and_param() carries option rename_multi_documents output folders can renamed SAProcessings’ names displayed JDemetra+ interface (default, rename_multi_documents = TRUE: output files renamed). use cases:","code":"options(cruncher_bin_directory = \"D:/jdemetra-cli-2.2.3/bin/\") # Code to update the \"ipi\" workspace stored in D:/seasonal_adjustment/, with the refresh policy \"lastoutliers\". # All other create_param_file() parameters are default ones. In particular, the exported parameters are the default # \"default_matrix_item\" and \"default_tsmatrix_series\", and the output folder is D:/seasonal_adjustment/Output/. cruncher_and_param(     workspace = \"D:/seasonal_adjustment/ipi.xml\",     rename_multi_documents = FALSE,     policy = \"lastoutliers\" )  # Example of customisation of the parameter \"output\": cruncher_and_param(     workspace = \"D:/seasonal_adjustment/ipi.xml\",     output = \"D:/cruncher_results/\",     rename_multi_documents = FALSE,     policy = \"lastoutliers\" )  # Here, we explicitely have \"rename_multi_documents = TRUE\" (which is also the default value) to rename the ouput folders # after the SAProcessings as displayed in the JDemetra+ interface. # With parameter \"delete_existing_file = TRUE\", all pre-existing versions of such folders are deleted before the export. cruncher_and_param(     workspace = \"D:/Campagne_CVS/ipi.xml\",     rename_multi_documents = TRUE,     delete_existing_file = TRUE,     policy = \"lastoutliers\" )  # To see all the function parameters: ?cruncher_and_param"},{"path":"https://inseefr.github.io/JDCruncheR/articles/Using_the_cruncher_with_JDCruncheR_pdf.html","id":"about-the-cruncher","dir":"Articles","previous_headings":"","what":"About the cruncher","title":"Using the cruncher with JDCruncheR pdf","text":"prevent package voluminous, contain JDemetra+ cruncher. Said cruncher can downloaded : https://github.com/jdemetra/jdemetra-app/releases. information cruncher installation set portable version Java, please refer JDCruncheR wiki: https://github.com/InseeFr/JDCruncheR/wiki/Installation-&-configuration. JDemetra+ cruncher requires three elements function: settings file containing refresh policy parameters apply workspace; valid JDemetra+ workspace; path cruncher directory. JDCruncheR package, three functions cruncher-related: create_param_file() generates settings file; cruncher() crunches workspace pre-generated settings file; cruncher_and_param() generates settings file crunches workspace. function, cruncher output can also customised.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/articles/Using_the_cruncher_with_JDCruncheR_pdf.html","id":"generating-the-settings-file-with-create_param_file","dir":"Articles","previous_headings":"","what":"Generating the settings file with create_param_file()","title":"Using the cruncher with JDCruncheR pdf","text":"arguments function create_param_file() described JDemetra+ cruncher wiki (https://github.com/jdemetra/jwsacruncher/wiki). three main arguments : policy, refresh policy: matrix_item, list containing names parameters export. default, names contained default_matrix_item option. Thus, user can either modify default_matrix_item option matrix_item option: tsmatrix_series, list containing names parameters export. default, names contained default_tsmatrix_series option. Thus, user can either modify default_tsmatrix_series option tsmatrix_series option: visualise parameters can used customise options, enter ?create_param_file (R). use cases function create_param_file():","code":"library(\"JDCruncheR\") # To see the default parameters: getOption(\"default_matrix_item\") # To customise the parameter selection (here, only the information criteria are exported): options(default_matrix_item = c(     \"likelihood.aic\",     \"likelihood.aicc\",     \"likelihood.bic\",     \"likelihood.bicc\" )) # To see the default parameters: getOption(\"default_tsmatrix_series\") # To customise the parameter selection (here, only the seasonaly adjusted series and its previsions are exported): options(default_tsmatrix_series = c(\"sa\", \"sa_f\")) # A .param parameters file will be created in D:/, containing the \"lastoutliers\" refresh policy # and default values for the other parameters create_param_file(     dir_file_param = \"D:/\",     policy = \"lastoutliers\" )  # To customise the \"default_matrix_item\" and \"default_tsmatrix_series\" options # to only export the information criteria, the adjusted series and its forecast: create_param_file(     dir_file_param = \"D:/\",     policy = \"lastoutliers\",     matrix_item = c(         \"likelihood.aic\", \"likelihood.aicc\",         \"likelihood.bic\", \"likelihood.bicc\"     ),     tsmatrix_series = c(\"sa\", \"sa_f\") )"},{"path":"https://inseefr.github.io/JDCruncheR/articles/Using_the_cruncher_with_JDCruncheR_pdf.html","id":"launching-the-cruncher","dir":"Articles","previous_headings":"","what":"Launching the cruncher","title":"Using the cruncher with JDCruncheR pdf","text":"crunch workspace functions cruncher() cruncher_and_param(), paths cruncher workspace must specified via two parameters, cruncher_bin_directory workspace. declared, path cruncher (stored parameter cruncher_bin_directory) valid cruncher executions. path must refer jwsacruncher.bat file location, within “bin” installation folder. example, cruncher installed D:\\jdemetra-cli-2.2.3, jwsacruncher.bat file D:\\jdemetra-cli-2.2.3\\bin. code declare path via cruncher_bin_directory parameter : path workspace specified, window opens manual workspace selection. function cruncher_and_param() creates temporary parameters file calling create_param_file(), used function cruncher() crunch workspace. addition parameters used two functions, cruncher_and_param() carries option rename_multi_documents output folders can renamed SAProcessings’ names displayed JDemetra+ interface (default, rename_multi_documents = TRUE: output files renamed). use cases:","code":"options(cruncher_bin_directory = \"D:/jdemetra-cli-2.2.3/bin/\") # Code to update the \"ipi\" workspace stored in D:/seasonal_adjustment/, with the refresh policy \"lastoutliers\". # All other create_param_file() parameters are default ones. In particular, the exported parameters are the default # \"default_matrix_item\" and \"default_tsmatrix_series\", and the output folder is D:/seasonal_adjustment/Output/. cruncher_and_param(     workspace = \"D:/seasonal_adjustment/ipi.xml\",     rename_multi_documents = FALSE,     policy = \"lastoutliers\" )  # Example of customisation of the parameter \"output\": cruncher_and_param(     workspace = \"D:/seasonal_adjustment/ipi.xml\",     output = \"D:/cruncher_results/\",     rename_multi_documents = FALSE,     policy = \"lastoutliers\" )  # Here, we explicitely have \"rename_multi_documents = TRUE\" (which is also the default value) to rename the ouput folders # after the SAProcessings as displayed in the JDemetra+ interface. # With parameter \"delete_existing_file = TRUE\", all pre-existing versions of such folders are deleted before the export. cruncher_and_param(     workspace = \"D:/Campagne_CVS/ipi.xml\",     rename_multi_documents = TRUE,     delete_existing_file = TRUE,     policy = \"lastoutliers\" )  # To see all the function parameters: ?cruncher_and_param"},{"path":"https://inseefr.github.io/JDCruncheR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tanguy Barthelemy. Author, maintainer, artist. Alain Quartier-la-Tente. Author. Institut national de la statistique et des études économiques. Copyright holder.           https://www.insee.fr/ Anna Smyk. Author.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Barthelemy T, Quartier-la-Tente , Smyk (2024). JDCruncheR: Interface 'JDemetra+' Cruncher R, Quality Report Generator. R package version 0.3.0, https://inseefr.github.io/JDCruncheR/, https://github.com/InseeFr/JDCruncheR.","code":"@Manual{,   title = {JDCruncheR: Interface Between the 'JDemetra+' Cruncher and R, and Quality Report Generator},   author = {Tanguy Barthelemy and Alain Quartier-la-Tente and Anna Smyk},   year = {2024},   note = {R package version 0.3.0, https://inseefr.github.io/JDCruncheR/},   url = {https://github.com/InseeFr/JDCruncheR}, }"},{"path":[]},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/index.html","id":"présentation","dir":"","previous_headings":"Français 🇫🇷","what":"Présentation","title":"Interface Between the JDemetra+ Cruncher and R, and Quality Report Generator","text":"Le premier du package JDCruncheR est de fournir un accès rapide et facile au cruncher (JWSACruncher) depuis R. Le cruncher est un outil de mise à jour des workspaces de JDemetra+ sans avoir à ouvrir la GUI (Graphical User Interface). La dernière version peut être téléchargée ici : https://github.com/jdemetra/jwsacruncher/releases. Pour plus d’information, vous pouvez visiter la page wiki. Avec JDCruncheR, vous pouvez aussi générer des bilans qualité utilisant l’output du cruncher. Ce bilan est un résumé des diagnostiques de la désaisonnalisation. Il peut être utilisé pour repérer les séries les plus problématiques qui nécessitent une analyse plus fine. Cela est très utile lorsqu’beaucoup de séries à désaisonnaliser.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/index.html","id":"installation","dir":"","previous_headings":"Français 🇫🇷","what":"Installation","title":"Interface Between the JDemetra+ Cruncher and R, and Quality Report Generator","text":"🎉 JDCruncheR est maintenant disponible sur le CRAN ! 🎉 Pour installer, il suffit de lancer la ligne de code suivante : Pour obtenir la version en cours de développement depuis GitHub :","code":"install.packages(\"JDCruncheR\") # Si le package remotes n'est pas installé # install.packages(\"remotes\")  # Installer la version en cours de développement depuis GitHub remotes::install_github(\"InseeFr/JDCruncheR\")"},{"path":"https://inseefr.github.io/JDCruncheR/index.html","id":"usage","dir":"","previous_headings":"Français 🇫🇷","what":"Usage","title":"Interface Between the JDemetra+ Cruncher and R, and Quality Report Generator","text":"Les seuils des tests du bilan qualité sont personnalisables. Pour cela, il faut modifier l’option \"jdc_thresholds\". Pour récupérer les valeurs des tests par défault, il faut appeler la fonction get_thresholds() : Pour changer la valeur de l’option, peut utiliser la fonction set_thresholds() :","code":"library(\"JDCruncheR\") get_thresholds(\"m7\") #>   Good    Bad Severe  #>      1      2    Inf get_thresholds(default = TRUE) #> $qs_residual_sa_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $qs_residual_sa_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_sa_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_sa_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_td_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_td_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $residuals_independency #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_homoskedasticity #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_skewness #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_kurtosis #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_normality #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $oos_mean #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $oos_mse #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $m7 #>   Good    Bad Severe  #>      1      2    Inf  #>  #> $q #> Good  Bad  #>    1  Inf  #>  #> $q_m2 #> Good  Bad  #>    1  Inf  #>  #> $pct_outliers #>      Good Uncertain       Bad  #>         3         5       Inf # Fixer les seuils à une certaine valeur set_thresholds(test_name = \"m7\", thresholds = c(Good = 0.8, Bad = 1.4, Severe = Inf)) get_thresholds(test_name = \"m7\", default = FALSE) #>   Good    Bad Severe  #>    0.8    1.4    Inf  # Remettre tous les seuils à leur valeur par défaut set_thresholds() get_thresholds(test_name = \"m7\", default = FALSE) #>   Good    Bad Severe  #>      1      2    Inf"},{"path":"https://inseefr.github.io/JDCruncheR/index.html","id":"autres-informations","dir":"","previous_headings":"Français 🇫🇷","what":"Autres informations","title":"Interface Between the JDemetra+ Cruncher and R, and Quality Report Generator","text":"Pour plus d’informations sur l’installation et la configuration du package JDCruncheR, vous pouvez visiter la page wiki Pour une description plus complète des packages R pour JDemetra+ voir le document de travail Insee Les packages R pour JDemetra+ : une aide à la désaisonnalisation","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/index.html","id":"overview","dir":"","previous_headings":"English 🇬🇧","what":"Overview","title":"Interface Between the JDemetra+ Cruncher and R, and Quality Report Generator","text":"primary objective JDCruncheR package provide quick easy access JDemetra+ cruncher (JWSACruncher) R. cruncher tool updating JDemetra+ workspaces, without open graphical user interface. latest version can downloaded : https://github.com/jdemetra/jwsacruncher/releases. information, please refer wiki page. JDCruncheR, can also generate quality report based cruncher’s output. report formatted summary seasonal adjustment process master diagnostics parameters. can used spot problematic series require finer analysis. useful dealing large number series.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/index.html","id":"installation-1","dir":"","previous_headings":"English 🇬🇧","what":"Installation","title":"Interface Between the JDemetra+ Cruncher and R, and Quality Report Generator","text":"🎉 JDCruncheR now available CRAN! 🎉 install , launch following command line: get current development version GitHub:","code":"install.packages(\"JDCruncheR\") # If remotes packages is not installed # install.packages(\"remotes\")  # Install development version from GitHub remotes::install_github(\"InseeFr/JDCruncheR\")"},{"path":"https://inseefr.github.io/JDCruncheR/index.html","id":"usage-1","dir":"","previous_headings":"English 🇬🇧","what":"Usage","title":"Interface Between the JDemetra+ Cruncher and R, and Quality Report Generator","text":"thresholds QR tests can customised modify option \"jdc_thresholds\". get (default ) values thresholds tests, can call fonction get_thresholds() : change value option, can use fonction set_thresholds():","code":"library(\"JDCruncheR\") get_thresholds(\"m7\") #>   Good    Bad Severe  #>      1      2    Inf get_thresholds(default = TRUE) #> $qs_residual_sa_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $qs_residual_sa_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_sa_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_sa_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_td_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_td_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $residuals_independency #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_homoskedasticity #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_skewness #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_kurtosis #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_normality #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $oos_mean #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $oos_mse #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $m7 #>   Good    Bad Severe  #>      1      2    Inf  #>  #> $q #> Good  Bad  #>    1  Inf  #>  #> $q_m2 #> Good  Bad  #>    1  Inf  #>  #> $pct_outliers #>      Good Uncertain       Bad  #>         3         5       Inf # Set threshold to imposed value set_thresholds(test_name = \"m7\", thresholds = c(Good = 0.8, Bad = 1.4, Severe = Inf)) get_thresholds(test_name = \"m7\", default = FALSE) #>   Good    Bad Severe  #>    0.8    1.4    Inf  # Reset all thresholds to default set_thresholds() get_thresholds(test_name = \"m7\", default = FALSE) #>   Good    Bad Severe  #>      1      2    Inf"},{"path":"https://inseefr.github.io/JDCruncheR/index.html","id":"other-informations","dir":"","previous_headings":"English 🇬🇧","what":"Other informations","title":"Interface Between the JDemetra+ Cruncher and R, and Quality Report Generator","text":"informations installing configuring JDCruncheR package, can visit wiki page. comprehensive description R packages JDemetra+ check Insee working paper R Tools JDemetra+: Seasonal adjustment made easier","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/JDCruncheR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"JDCruncheR: Interface Between the 'JDemetra+' Cruncher and R, and Quality Report Generator — JDCruncheR-package","title":"JDCruncheR: Interface Between the 'JDemetra+' Cruncher and R, and Quality Report Generator — JDCruncheR-package","text":"Tool generating quality reports cruncher outputs (calculating series scores). latest version cruncher can downloaded : https://github.com/jdemetra/jwsacruncher/releases.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/JDCruncheR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"JDCruncheR: Interface Between the 'JDemetra+' Cruncher and R, and Quality Report Generator — JDCruncheR-package","text":"Maintainer: Tanguy Barthelemy tanguy.barthelemy@insee.fr [artist] Authors: Alain Quartier-la-Tente alain.quartier-la-tente@insee.fr (ORCID) Anna Smyk anna.smyk@insee.fr contributors: Institut national de la statistique et des études économiques (https://www.insee.fr/) [copyright holder]","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Quality report objects — QR_matrix","title":"Quality report objects — QR_matrix","text":"mQR_matrix() QR_matrix() creating one (several) quality report. function .QR_matrix() .mQR_matrix() functions test whether object quality report list quality reports.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quality report objects — QR_matrix","text":"","code":"QR_matrix(modalities = NULL, values = NULL, score_formula = NULL)  mQR_matrix(x = list(), ...)  is.QR_matrix(x)  is.mQR_matrix(x)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quality report objects — QR_matrix","text":"modalities data.frame containing output variables' modalities (Good, Bad, etc.) values data.frame containing output variables' values (test p-values, test statistics, etc.) Therefore, values data frame can contain variables data frame modalities. score_formula formula used calculate series score (defined). x QR_matrix object, mQR_matrix object list QR_matrix objects. ... objects type x.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quality report objects — QR_matrix","text":"QR_matrix() creates returns QR_matrix object. mQR_matrix() creates returns mQR_matrix object (ie. list QR_matrix objects). .QR_matrix() .mQR_matrix() return Boolean values (TRUE FALSE).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quality report objects — QR_matrix","text":"AQR_matrix object list three items: modalities, data.frame containing set categorical variables (default: Good, Uncertain, Bad, Severe). values, data.frame containing values corresponding modalities indicators (.e. p-values, statistics, etc.), well variables modality defined (e.g. series frequency, ARIMA model, etc). score_formula contains formula used calculate series score (calculus done).","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_var_manipulation.html","id":null,"dir":"Reference","previous_headings":"","what":"Editing the indicators list — QR_var_manipulation","title":"Editing the indicators list — QR_var_manipulation","text":"Functions remove indicators (remove_indicators()) retrain indicators (retain_indicators()) QR_matrix mQR_matrix objects. series names (column \"series\") removed.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_var_manipulation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Editing the indicators list — QR_var_manipulation","text":"","code":"remove_indicators(x, ...)  retain_indicators(x, ...)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_var_manipulation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Editing the indicators list — QR_var_manipulation","text":"x QR_matrix mQR_matrix object. ... names variable remove (keep)","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_var_manipulation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Editing the indicators list — QR_var_manipulation","text":"remove_indicators() returns object x reduced flags variables used arguments ... input x QR_matrix, object class QR_matrix returned. input x mQR_matrix, object class mQR_matrix returned.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/QR_var_manipulation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Editing the indicators list — QR_var_manipulation","text":"","code":"# Path of matrix demetra_m demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extract the quality report from the demetra_m file QR <- extract_QR(demetra_path)  # Compute the score QR <- compute_score(QR, n_contrib_score = 2)  # Retain indicators retain_indicators(QR, \"score\", \"m7\") # retaining \"score\" and \"m7\" #> The quality report matrix has 13 observations #> There are 3 indicators in the modalities matrix and 3 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  m7  score #>  #> There's no additionnal variable in the values matrix #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2 retain_indicators(QR, c(\"score\", \"m7\")) # Same #> The quality report matrix has 13 observations #> There are 3 indicators in the modalities matrix and 3 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  m7  score #>  #> There's no additionnal variable in the values matrix #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2  # Remove indicators QR <- remove_indicators(QR, \"score\") # removing \"score\"  extract_score(QR) # is NULL because we removed the score indicator #> NULL"},{"path":"https://inseefr.github.io/JDCruncheR/reference/add_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Adding an indicator in QR_matrix objects — add_indicator","title":"Adding an indicator in QR_matrix objects — add_indicator","text":"Function add indicators QR_matrix objects.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/add_indicator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adding an indicator in QR_matrix objects — add_indicator","text":"","code":"add_indicator(x, indicator, variable_name, ...)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/add_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adding an indicator in QR_matrix objects — add_indicator","text":"x QR_matrix mQR_matrix object indicator vector data.frame (cf. details). variable_name string containing name variables add. ... parameters function merge.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/add_indicator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adding an indicator in QR_matrix objects — add_indicator","text":"function returns object, enhanced chosen indicator. input x QR_matrix, object class QR_matrix returned. input x mQR_matrix, object class mQR_matrix returned.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/add_indicator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adding an indicator in QR_matrix objects — add_indicator","text":"function add_indicator() adds chosen indicator values matrix quality report. Therefore, said indicator added modalities matrix, used calculate score (except weighting). using added variable score calculation, coded function recode_indicator_num. new indicator can vector data.frame. cases, format must allow pairing: vector's elements must named names must match quality report (variable \"series\"); data.frame must contain \"series\" column matches quality report's series.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/compute_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Score calculation — compute_score","title":"Score calculation — compute_score","text":"calculate score series quality report","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/compute_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score calculation — compute_score","text":"","code":"# S3 method for class 'QR_matrix' compute_score(   x,   score_pond = c(qs_residual_sa_on_sa = 30, f_residual_sa_on_sa = 30, qs_residual_sa_on_i     = 20, f_residual_sa_on_i = 20, f_residual_td_on_sa = 30, f_residual_td_on_i = 20,     oos_mean = 15, oos_mse = 10, residuals_independency = 15, residuals_homoskedasticity     = 5, residuals_skewness = 5, m7 = 5, q_m2 = 5),   modalities = c(\"Good\", \"Uncertain\", \"\", \"Bad\", \"Severe\"),   normalize_score_value,   na.rm = FALSE,   n_contrib_score,   conditional_indicator,   ... )  # S3 method for class 'mQR_matrix' compute_score(x, ...)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/compute_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score calculation — compute_score","text":"x QR_matrix mQR_matrix object. score_pond formula used calculate series score. modalities modalities ordered importance score calculation (cf. details). normalize_score_value integer indicating reference value weights normalisation. missing, weights normalised. na.rm logical indicating whether missing values must ignored calculating score. n_contrib_score integer indicating number variables create quality report's values matrix store n_contrib_score greatest contributions score (cf. details). specified, variable created. conditional_indicator list containing 3-elements sub-lists: \"indicator\", \"conditions\" \"condition_modalities\". reduce 1 weight chosen indicators depending variables' values (cf. details). ... unused parameters.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/compute_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score calculation — compute_score","text":"QR_matrix mQR_matrix object.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/compute_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score calculation — compute_score","text":"function compute_score calculates score modalities quality report: modality corresponds weight depends parameter modalities. default parameter c(\"Good\", \"Uncertain\", \"Bad\",\"Severe\"), associated weights respectively 0, 1, 2 3. score calculation based score_pond parameter, named integer vector containing weights apply (modalities matrix) variables. example, score_pond = c(qs_residual_sa_on_sa = 10, f_residual_td_on_sa = 5), score based variables qs_residual_sa_on_sa f_residual_td_on_sa. qs_residual_sa_on_sa grades multiplied 10 f_residual_td_on_sa grades, 5. ignore missing values calculating score, use parameter na.rm = TRUE. parameter normalize_score_value can used normalise scores. example, scores 0 20, specify normalize_score_value = 20. using parameter n_contrib_score, n_contrib_score new variables added quality report's values matrix. new variables store names variables contribute series score. example, n_contrib_score = 3 add values matrix three variables contribute score. new variables' names i_highest_score, rank terms contribution score (1_highest_score contains name greatest contributor, 2_highest_score second greatest, etc). variables non-zero contribution score taken account: series score 0, i_highest_score variables empty. series score positive m7 statistic, 1_highest_score value \"m7\" series i_highest_score empty. indicators relevant certain conditions. example, homoscedasticity test valid residuals independant, normality tests, residuals independant homoscedastic. cases, parameter conditional_indicator can use since reduces weight variables 1 conditions met. conditional_indicator list 3-elements sub-lists: \"indicator\": variable whose weight conditionally changed \"conditions\": variables used define conditions \"conditions_modalities\": modalities must verified induce weight change example, conditional_indicator = list(list(indicator = \"residuals_skewness\",   conditions = c(\"residuals_independency\", \"residuals_homoskedasticity\"),   conditions_modalities = c(\"Bad\",\"Severe\"))), reduces 1 weight variable \"residuals_skewness\" modalities independancy test (\"residuals_independency\") homoscedasticity test (\"residuals_homoskedasticity\") \"Bad\" \"Severe\".","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/compute_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score calculation — compute_score","text":"","code":"# Path of matrix demetra_m demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extract the quality report from the demetra_m file QR <- extract_QR(demetra_path)  # Calculer le score QR <- compute_score(QR, n_contrib_score = 2) print(QR) #> The quality report matrix has 13 observations #> There are 19 indicators in the modalities matrix and 23 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model  score  1_highest_contrib_score  2_highest_contrib_score #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model  1_highest_contrib_score  2_highest_contrib_score #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2  # Extract the modalities matrix: QR$modalities$score #>  [1] 140 105 280 245  75 240 460 505 460 515 300 305 510"},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Exporting QR_matrix objects in an Excel file — export_xlsx.QR_matrix","title":"Exporting QR_matrix objects in an Excel file — export_xlsx.QR_matrix","text":"export quality report Excel file.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.QR_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exporting QR_matrix objects in an Excel file — export_xlsx.QR_matrix","text":"","code":"# S3 method for class 'QR_matrix' export_xlsx(x, file, auto_format = TRUE, overwrite = TRUE, ...)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exporting QR_matrix objects in an Excel file — export_xlsx.QR_matrix","text":"x QR_matrix object. file character object path file export que l'veut créer auto_format logical indicating whether format output (auto_format = TRUE default). overwrite logical indicating whether create Excel file exist yet (create = TRUE default) ... unused arguments","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exporting QR_matrix objects in an Excel file — export_xlsx.QR_matrix","text":"Returns invisibly (via invisible(x)) workbook object created XLConnect::loadWorkbook() manipulation.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.html","id":null,"dir":"Reference","previous_headings":"","what":"Exporting QR_matrix or mQR_matrix objects in an Excel file — export_xlsx","title":"Exporting QR_matrix or mQR_matrix objects in an Excel file — export_xlsx","text":"Exporting QR_matrix mQR_matrix objects Excel file","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exporting QR_matrix or mQR_matrix objects in an Excel file — export_xlsx","text":"","code":"export_xlsx(x, ...)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exporting QR_matrix or mQR_matrix objects in an Excel file — export_xlsx","text":"x QR_matrix mQR_matrix object. ... parameters function export_xlsx.QR_matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exporting QR_matrix or mQR_matrix objects in an Excel file — export_xlsx","text":"x mQR_matrix, function returns invisibly (via invisible(x)) mQR_matrix object x. Else x QR_matrix, function returns invisibly (via invisible(x)) workbook object created XLConnect::loadWorkbook() manipulation.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.mQR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Exporting mQR_matrix objects in Excel files — export_xlsx.mQR_matrix","title":"Exporting mQR_matrix objects in Excel files — export_xlsx.mQR_matrix","text":"export several quality reports Excel files","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.mQR_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exporting mQR_matrix objects in Excel files — export_xlsx.mQR_matrix","text":"","code":"# S3 method for class 'mQR_matrix' export_xlsx(   x,   export_dir,   layout_file = c(\"ByComponent\", \"ByQRMatrix\", \"AllTogether\"),   auto_format = TRUE,   overwrite = TRUE,   ... )"},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.mQR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exporting mQR_matrix objects in Excel files — export_xlsx.mQR_matrix","text":"x mQR_matrix object export. export_dir export directory. layout_file export parameter. default, (layout_file = \"ByComponent\") Excel file exported part quality report matrix (modalities values matrices). group modalities values reports/sheets single Excel file, use option layout_file = \"ByQRMatrix\". auto_format logical indicating whether format output (auto_format = TRUE default). overwrite logical indicating whether create Excel file exist yet (create = TRUE default) ... unused arguments","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/export_xlsx.mQR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exporting mQR_matrix objects in Excel files — export_xlsx.mQR_matrix","text":"Returns invisibly (via invisible(x)) mQR_matrix object x.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_QR.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction of a quality report — extract_QR","title":"Extraction of a quality report — extract_QR","text":"extract quality report csv file containing diagnostics matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_QR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extraction of a quality report — extract_QR","text":"","code":"extract_QR(matrix_output_file, sep = \";\", dec = \",\")"},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_QR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction of a quality report — extract_QR","text":"matrix_output_file csv file containing diagnostics matrix. sep separator used csv file (default, sep = \";\") dec decimal separator used csv file (default, dec = \",\")","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_QR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction of a quality report — extract_QR","text":"QR_matrix object.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_QR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction of a quality report — extract_QR","text":"function generates quality report csv file containing diagnostics (usually file demetra_m.csv). demetra_m.csv file can generated launching cruncher (functions cruncher cruncher_and_param) default export parameters, used default option csv_layout = \"vtable\" format output tables functions cruncher_and_param create_param_file creating parameters file. function returns QR_matrix object, list 3 objects: modalities, data.frame containing several indicators categorical quality (Good, Uncertain, Bad, Severe). values, data.frame containing indicators values lead quality category (.e.: p-values, statistics, etc.) well additional variables modality/quality (series frequency arima model). score_formula store formula used calculate score (relevant). initial value NULL.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_QR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction of a quality report — extract_QR","text":"","code":"# Path of matrix demetra_m demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extract the quality report from the demetra_m file QR <- extract_QR(demetra_path)  print(QR) #> The quality report matrix has 13 observations #> There are 18 indicators in the modalities matrix and 20 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model #>  #> No score was calculated  # Extract the modalities matrix: QR$modalities #>    series qs_residual_sa_on_sa f_residual_sa_on_sa qs_residual_sa_on_i #> 1  RF0610                 Good                Good                Good #> 2  RF0620                 Good                Good                Good #> 3  RF0811                 Good                Good                Good #> 4  RF0812                 Good                Good                Good #> 5  RF0893                 Good                Good                Good #> 6  RF0899                 Good                Good                Good #> 7  RF1011               Severe                Good              Severe #> 8  RF1012               Severe                Good              Severe #> 9  RF1013                  Bad                Good           Uncertain #> 10 RF1020               Severe                Good              Severe #> 11 RF1031                  Bad                Good                 Bad #> 12 RF1032                 Good                Good                Good #> 13 RF1039               Severe                Good              Severe #>    f_residual_sa_on_i f_residual_td_on_sa f_residual_td_on_i #> 1                Good                 Bad          Uncertain #> 2                Good                Good               Good #> 3                Good              Severe                Bad #> 4                Good              Severe             Severe #> 5                Good                Good               Good #> 6                Good                 Bad                Bad #> 7                Good              Severe             Severe #> 8                Good              Severe             Severe #> 9                Good              Severe             Severe #> 10               Good              Severe             Severe #> 11               Good           Uncertain          Uncertain #> 12               Good              Severe             Severe #> 13               Good              Severe             Severe #>    residuals_independency residuals_normality residuals_homoskedasticity #> 1                    Good                Good                       Good #> 2                    Good                 Bad                        Bad #> 3                     Bad                 Bad                        Bad #> 4                     Bad                Good                       Good #> 5               Uncertain                Good                       Good #> 6                     Bad                Good                       Good #> 7                     Bad                Good                       Good #> 8                     Bad                Good                       Good #> 9                     Bad                 Bad                        Bad #> 10                    Bad           Uncertain                       Good #> 11                    Bad                 Bad                  Uncertain #> 12                    Bad                Good                       Good #> 13                    Bad                 Bad                  Uncertain #>    residuals_skewness residuals_kurtosis  oos_mean   oos_mse   m7    q q_m2 #> 1                Good               Good      Good       Bad Good Good Good #> 2                 Bad                Bad       Bad       Bad Good Good Good #> 3                 Bad                Bad      Good Uncertain Good  Bad  Bad #> 4                Good               Good      Good      Good Good Good Good #> 5                Good               Good       Bad      Good Good  Bad  Bad #> 6                Good               Good       Bad      Good Good Good Good #> 7                Good               Good      Good      Good Good  Bad  Bad #> 8                Good               Good       Bad      Good Good  Bad  Bad #> 9                 Bad                Bad       Bad      Good  Bad  Bad  Bad #> 10               Good               Good       Bad Uncertain Good Good  Bad #> 11          Uncertain          Uncertain Uncertain       Bad Good Good Good #> 12               Good               Good       Bad      Good Good  Bad  Bad #> 13          Uncertain          Uncertain       Bad Uncertain Good Good Good #>    pct_outliers #> 1     Uncertain #> 2           Bad #> 3          Good #> 4          Good #> 5          Good #> 6          Good #> 7          Good #> 8          Good #> 9          Good #> 10         Good #> 11    Uncertain #> 12         Good #> 13         Good # Or: QR[[\"modalities\"]] #>    series qs_residual_sa_on_sa f_residual_sa_on_sa qs_residual_sa_on_i #> 1  RF0610                 Good                Good                Good #> 2  RF0620                 Good                Good                Good #> 3  RF0811                 Good                Good                Good #> 4  RF0812                 Good                Good                Good #> 5  RF0893                 Good                Good                Good #> 6  RF0899                 Good                Good                Good #> 7  RF1011               Severe                Good              Severe #> 8  RF1012               Severe                Good              Severe #> 9  RF1013                  Bad                Good           Uncertain #> 10 RF1020               Severe                Good              Severe #> 11 RF1031                  Bad                Good                 Bad #> 12 RF1032                 Good                Good                Good #> 13 RF1039               Severe                Good              Severe #>    f_residual_sa_on_i f_residual_td_on_sa f_residual_td_on_i #> 1                Good                 Bad          Uncertain #> 2                Good                Good               Good #> 3                Good              Severe                Bad #> 4                Good              Severe             Severe #> 5                Good                Good               Good #> 6                Good                 Bad                Bad #> 7                Good              Severe             Severe #> 8                Good              Severe             Severe #> 9                Good              Severe             Severe #> 10               Good              Severe             Severe #> 11               Good           Uncertain          Uncertain #> 12               Good              Severe             Severe #> 13               Good              Severe             Severe #>    residuals_independency residuals_normality residuals_homoskedasticity #> 1                    Good                Good                       Good #> 2                    Good                 Bad                        Bad #> 3                     Bad                 Bad                        Bad #> 4                     Bad                Good                       Good #> 5               Uncertain                Good                       Good #> 6                     Bad                Good                       Good #> 7                     Bad                Good                       Good #> 8                     Bad                Good                       Good #> 9                     Bad                 Bad                        Bad #> 10                    Bad           Uncertain                       Good #> 11                    Bad                 Bad                  Uncertain #> 12                    Bad                Good                       Good #> 13                    Bad                 Bad                  Uncertain #>    residuals_skewness residuals_kurtosis  oos_mean   oos_mse   m7    q q_m2 #> 1                Good               Good      Good       Bad Good Good Good #> 2                 Bad                Bad       Bad       Bad Good Good Good #> 3                 Bad                Bad      Good Uncertain Good  Bad  Bad #> 4                Good               Good      Good      Good Good Good Good #> 5                Good               Good       Bad      Good Good  Bad  Bad #> 6                Good               Good       Bad      Good Good Good Good #> 7                Good               Good      Good      Good Good  Bad  Bad #> 8                Good               Good       Bad      Good Good  Bad  Bad #> 9                 Bad                Bad       Bad      Good  Bad  Bad  Bad #> 10               Good               Good       Bad Uncertain Good Good  Bad #> 11          Uncertain          Uncertain Uncertain       Bad Good Good Good #> 12               Good               Good       Bad      Good Good  Bad  Bad #> 13          Uncertain          Uncertain       Bad Uncertain Good Good Good #>    pct_outliers #> 1     Uncertain #> 2           Bad #> 3          Good #> 4          Good #> 5          Good #> 6          Good #> 7          Good #> 8          Good #> 9          Good #> 10         Good #> 11    Uncertain #> 12         Good #> 13         Good"},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Score extraction — extract_score","title":"Score extraction — extract_score","text":"extract score variables QR_matrix mQR_matrix objects.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score extraction — extract_score","text":"","code":"extract_score(   x,   format_output = c(\"data.frame\", \"vector\"),   weighted_score = FALSE )"},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score extraction — extract_score","text":"x QR_matrix mQR_matrix. format_output string characters indicating output format: either data.frame vector. weighted_score logical indicating whether extract weighted score (previously calculated) unweighted one. default, unweighted score extracted.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score extraction — extract_score","text":"extract_score() returns data.frame two column: series name score.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Score extraction — extract_score","text":"QR_matrix objects, output vector object NULL score previously calculated. mQR_matrix objects, list scores (NULL elements vectors).","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/extract_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score extraction — extract_score","text":"","code":"# Path of matrix demetra_m demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extract the quality report from the demetra_m file QR <- extract_QR(demetra_path)  # Compute the score QR1 <- compute_score(x = QR, n_contrib_score = 5) QR2 <- compute_score(     x = QR,     score_pond = c(qs_residual_sa_on_sa = 5, qs_residual_sa_on_i = 30,                    f_residual_td_on_sa = 10, f_residual_td_on_i = 40,                    oos_mean = 30, residuals_skewness = 15, m7 = 25) ) mQR <- mQR_matrix(list(a = QR1, b = QR2))  # Extract score extract_score(QR1) #>    series score #> 1  RF0610   140 #> 2  RF0620   105 #> 3  RF0811   280 #> 4  RF0812   245 #> 5  RF0893    75 #> 6  RF0899   240 #> 7  RF1011   460 #> 8  RF1012   505 #> 9  RF1013   460 #> 10 RF1020   515 #> 11 RF1031   300 #> 12 RF1032   305 #> 13 RF1039   510 extract_score(mQR) #> $a #>    series score #> 1  RF0610   140 #> 2  RF0620   105 #> 3  RF0811   280 #> 4  RF0812   245 #> 5  RF0893    75 #> 6  RF0899   240 #> 7  RF1011   460 #> 8  RF1012   505 #> 9  RF1013   460 #> 10 RF1020   515 #> 11 RF1031   300 #> 12 RF1032   305 #> 13 RF1039   510 #>  #> $b #>    series score #> 1  RF0610    70 #> 2  RF0620   135 #> 3  RF0811   205 #> 4  RF0812   200 #> 5  RF0893    90 #> 6  RF0899   240 #> 7  RF1011   340 #> 8  RF1012   430 #> 9  RF1013   455 #> 10 RF1020   430 #> 11 RF1031   200 #> 12 RF1032   290 #> 13 RF1039   445 #>"},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Objets bilan qualité — fr-QR_matrix","title":"Objets bilan qualité — fr-QR_matrix","text":"QR_matrix() permet de créer un objet de type QR_matrix contenant un bilan qualité.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objets bilan qualité — fr-QR_matrix","text":"modalities un data.frame contenant les modalités (Good, Bad, etc.) associées aux variables. values un data.frame contenant les valeurs (p-valeurs des tests, statistiques, etc.) associées aux variables. Peut donc contenir plus de variables que le data.frame modalities. score_formula formule utilisée pour calculer le score global (s'il existe). x un objet de type QR_matrix, mQR_matrix ou une liste d'objets QR_matrix. ... des objets du même type que x.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objets bilan qualité — fr-QR_matrix","text":"QR_matrix() crée et renvoie un objet QR_matrix. mQR_matrix() crée et renvoie un objet mQR_matrix (c'est-à-dire une liste d'objets QR_matrix). .QR_matrix() et .mQR_matrix() renvoient des valeurs booléennes (TRUE ou FALSE).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-QR_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Objets bilan qualité — fr-QR_matrix","text":"mQR_matrix() permet de créer un objet de type mQR_matrix qui est une liste de bilans qualité (donc d'objets QR_matrix). .QR_matrix() et .mQR_matrix() permettent de tester si un objet est un bilan qualité ou une liste de bilans qualité. Un objet  de type QR_matrix est une liste de trois paramètres : le paramètre modalities est un data.frame contenant un ensemble de variables sous forme catégorielle (par défaut : Good, Uncertain, Bad, Severe). le paramètre values  est un data.frame contenant les valeurs associées aux indicateurs présents dans modalities (.e. : p-valeurs, statistiques, etc.), ainsi que des variables qui n'ont pas de modalité (.e. : fréquence de la série, modèle ARIMA, etc). le paramètre score_formula contient la formule utilisée pour calculer le score (une fois le calcul réalisé).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-add_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Ajout d'un indicateur dans les objets QR_matrix — fr-add_indicator","title":"Ajout d'un indicateur dans les objets QR_matrix — fr-add_indicator","text":"Permet d'ajouter un indicateur dans les objets QR_matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-add_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ajout d'un indicateur dans les objets QR_matrix — fr-add_indicator","text":"x objet de type QR_matrix ou mQR_matrix. indicator un vector ou un data.frame (voir détails). variable_name chaîne de caractères contenant les noms des nouvelles variables. ... autres paramètres de la fonction merge.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-add_indicator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ajout d'un indicateur dans les objets QR_matrix — fr-add_indicator","text":"Cette fonction renvoie le même objet, enrichi de l'indicateur choisi. Ainsi, si l'entrée x est une matrice QR, un objet de la classe QR_matrix est renvoyé. Si le code d'entrée x est une matrice mQR, un objet de la classe mQR_matrix est renvoyé.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-add_indicator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Ajout d'un indicateur dans les objets QR_matrix — fr-add_indicator","text":"La fonction add_indicator() permet d'ajouter un indicateur dans la matrice des valeurs du bilan qualité. L'indicateur n'est donc pas ajouté dans la matrice des modalités et ne peut être utilisé dans le calcul du score (sauf pour le pondérer). Pour l'utiliser dans le calcul du score, il faudra d'abord le recoder avec la fonction recode_indicator_num. L'indicateur à ajouter peut être sous deux formats : vector ou data.frame. Dans les deux cas, il faut que les valeurs à ajouter puissent être associées aux bonnes séries dans la matrice du bilan qualité : dans le cas d'un vector, les éléments devront être nommés et les noms doivent correspondre à ceux présents dans le bilan qualité (variable \"series\") ; dans le cas d'un data.frame, il devra contenir une colonne \"series\" avec les noms des séries correspondantes.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-compute_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcul d'un score global — fr-compute_score","title":"Calcul d'un score global — fr-compute_score","text":"Permet de calculer un score global à partir d'un bilan qualité","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-compute_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcul d'un score global — fr-compute_score","text":"x objet de type QR_matrix ou mQR_matrix. score_pond formule utilisée pour calculer le score global. modalities modalités triées par ordre d'importance dans le calcul du score (voir détails). normalize_score_value chiffre indiquant la valeur de référence pour la normalisation des pondérations utilisées lors du calcul du score. Si le paramètre n'est pas renseigné, les poids ne seront pas normalisés. na.rm booléen indiquant si les valeurs manquantes doivent être enlevées pour le calcul du score. n_contrib_score entier indiquant le nombre de variables à créer dans la matrice des valeurs du bilan qualité contenant les n_contrib_score plus grandes contributrices au score (voir détails). S'il n'est pas spécifié, aucune variable n'est créée. conditional_indicator une list contenant des listes ayant 3 éléments : \"indicator\", \"conditions\" et \"condition_modalities\". Permet de réduire à 1 le poids de certains indicateurs en fonction des valeurs d'autres variables (voir détails). ... autres paramètres non utilisés.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-compute_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcul d'un score global — fr-compute_score","text":"Un objet de type QR_matrix ou mQR_matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-compute_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calcul d'un score global — fr-compute_score","text":"La fonction compute_score permet de calculer un score à partir des modalités d'un bilan qualité. Pour cela, chaque modalité est associée à un poids défini par le paramètre modalities. Ainsi, le paramètre par défaut étant c(\"Good\", \"Uncertain\", \"Bad\",\"Severe\"), la valeur \"Good\" sera associée à la note 0, la valeur \"Uncertain\" sera associée à la note 1, la valeur \"Bad\" sera associée à la note 2 et la valeur \"Bad\" sera associée à la note 3. Le calcul du score se fait grâce au paramètre score_pond, qui est un vecteur numérique nommé contenant des poids et dont les noms correspondent aux variables de la matrice des modalités à utiliser dans le score. Ainsi, avec le paramètre score_pond = c(qs_residual_sa_on_sa = 10, f_residual_td_on_sa = 5) le score sera calculé à partir des deux variables qs_residual_sa_on_sa et f_residual_td_on_sa. Les notes associées aux modalités de la variable qs_residual_sa_on_sa seront multipliées par 10 et celles associées à la variable f_residual_td_on_sa seront multipliées par 5. Dans le calcul du score, certaines variables peuvent être manquantes: pour ne pas prendre en compte ces valeurs dans le calcul, il suffit d'utiliser le paramètre na.rm = TRUE. Le paramètre normalize_score_value permet de normaliser les scores. Par exemple, si l'souhaite avoir des notes entre 0 et 20, il suffit d'utiliser le paramètre normalize_score_value = 20. Le paramètre n_contrib_score permet d'ajouter de nouvelles variables à la matrice des valeurs du bilan qualité dont les valeurs correspondent aux noms des variables qui contribuent le plus au score de la série. n_contrib_score est un entier égal au nombre de variables contributrices que l'souhaite exporter. Par exemple, pour n_contrib_score = 3, trois colonnes seront créées et elles contiendront les trois plus grandes contributrices au score. Les noms des nouvelles variables sont i_highest_score, correspondant au rang en terme de contribution au score (1_highest_score contiendra les noms des plus grandes contributrices, 2_highest_score des deuxièmes plus grandes contributrices, etc). Seules les variables qui ont une contribution non nulle au score sont prises en compte. Ainsi, si une série un score nul, toutes les colonnes i_highest_score associées à cette série seront vides. Et si une série un score positif uniquement du fait de la variable \"m7\", alors la valeur correspondante à la variable 1_highest_score sera égale à \"m7\" et celle des autres variables i_highest_score seront vides. Certains indicateurs peuvent n'avoir de sens que sous certaines conditions. Par exemple, le test d'homoscédasticité n'est valide que si les résidus sont indépendants et les tests de normalité, que si les résidus sont indépendants et homoscédastiques. Le paramètre conditional_indicator permet de prendre cela en compte en réduisant, sous certaines conditions, à 1 le poids de certains variables. C'est une list contenant des listes ayant 3 éléments : \"indicator\" : nom de la variable pour laquelle veut ajouter des conditions \"conditions\" : nom des variables que l'utilise pour conditionner \"conditions_modalities\" : modalités qui doivent être vérifiées pour modifier le poids Ainsi, avec le paramètre conditional_indicator = list(list(indicator = \"residuals_skewness\",   conditions = c(\"residuals_independency\", \"residuals_homoskedasticity\"),   conditions_modalities = c(\"Bad\",\"Severe\"))), réduit à 1 le poids de la variable \"residuals_skewness\" lorsque les modalités du test d'indépendance (\"residuals_independency\") ou du test d'homoscédasticité (\"residuals_homoskedasticity\") valent \"Bad\" ou \"Severe\".","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-compute_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calcul d'un score global — fr-compute_score","text":"","code":"# Chemin menant au fichier demetra_m.csv demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extraire le bilan qualité à partir du fichier demetra_m.csv QR <- extract_QR(demetra_path)  # Compute the score QR <- compute_score(QR, n_contrib_score = 2) print(QR) #> The quality report matrix has 13 observations #> There are 19 indicators in the modalities matrix and 23 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model  score  1_highest_contrib_score  2_highest_contrib_score #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model  1_highest_contrib_score  2_highest_contrib_score #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2  # Extraire les modalités de la matrice QR$modalities$score #>  [1] 140 105 280 245  75 240 460 505 460 515 300 305 510"},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-export_xlsx.QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Export des objets QR_matrix dans un fichier Excel — fr-export_xlsx.QR_matrix","title":"Export des objets QR_matrix dans un fichier Excel — fr-export_xlsx.QR_matrix","text":"Permet d'exporter un bilan qualité dans un fichier Excel.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-export_xlsx.QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export des objets QR_matrix dans un fichier Excel — fr-export_xlsx.QR_matrix","text":"x objet de type QR_matrix. file un objet de type character contenant le chemin menant au fichier que l'veut créer auto_format booléen indiquant s'il faut formatter la sortie (auto_format = TRUE par défaut). overwrite booléen indiquant s'il faut ré-écrire créer le fichier Excel s'il existe déjà (create = TRUE par défaut) ... autres argument non utilisés","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-export_xlsx.QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export des objets QR_matrix dans un fichier Excel — fr-export_xlsx.QR_matrix","text":"Renvoie de manière invisible (via invisible(x)) un objet de classeur créé par XLConnect::loadWorkbook() pour une manipulation ultérieure.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-export_xlsx.mQR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Export des objets mQR_matrix dans des fichiers Excel — fr-export_xlsx.mQR_matrix","title":"Export des objets mQR_matrix dans des fichiers Excel — fr-export_xlsx.mQR_matrix","text":"Permet d'exporter dans des fichiers Excel une liste de bilan qualité","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-export_xlsx.mQR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export des objets mQR_matrix dans des fichiers Excel — fr-export_xlsx.mQR_matrix","text":"x objet de type mQR_matrix à exporter. export_dir dossier d'export des résultats. layout_file paramètre d'export. Par défaut, (layout_file = \"ByComponent\") et un fichier Excel est exporté par composante de la matrice bilan qualité (matrice des modalités ou des valeurs), dont chaque feuille correspond à un bilan qualité. Pour avoir un fichier par bilan qualité dont chaque feuille correspond à la composante exportée, utiliser layout_file = \"ByQRMatrix\". La modalité layout_file = \"AllTogether\" correspond à la création d'un fichier avec 2 feuilles par bilan qualité (Values et Modalities). auto_format booléen indiquant s'il faut formatter la sortie (auto_format = TRUE par défaut). overwrite booléen indiquant s'il faut ré-écrire créer le fichier Excel s'il existe déjà (create = TRUE par défaut) ... autres argument non utilisés","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-export_xlsx.mQR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export des objets mQR_matrix dans des fichiers Excel — fr-export_xlsx.mQR_matrix","text":"Renvoie de manière invisible (via invisible(x)) le même objet mQR_matrix que x.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_QR.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction d'un bilan qualité — fr-extract_QR","title":"Extraction d'un bilan qualité — fr-extract_QR","text":"Permet d'extraire un bilan qualité à partir du fichier CSV contenant la matrice des diagnostics.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_QR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction d'un bilan qualité — fr-extract_QR","text":"matrix_output_file fichier CSV contenant la matrice des diagnostics. sep séparateur de caractères utilisé dans le fichier csv (par défaut sep = \";\") dec séparateur décimal utilisé dans le fichier csv (par défaut dec = \",\")","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_QR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction d'un bilan qualité — fr-extract_QR","text":"Un objet de type QR_matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_QR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction d'un bilan qualité — fr-extract_QR","text":"La fonction permet d'extraire un bilan qualité à partir d'un fichier csv contenant l'ensemble des diagnostics (généralement fichier demetra_m.csv). Ce fichier peut être obtenu en lançant le cruncher (cruncher ou cruncher_and_param) avec l'ensemble des paramètres de base pour les paramètres à exporter et l'option csv_layout = \"vtable\" (par défaut) pour le format de sortie des fichiers csv (option de cruncher_and_param ou de create_param_file lors de la création du fichier de paramètres). Le résultat de cette fonction est un objet QR_matrix qui est une liste de trois paramètres : le paramètre modalities est un data.frame contenant un ensemble de variables sous forme catégorielle (Good, Uncertain, Bad, Severe). le paramètre values est un data.frame contenant les valeurs associées aux indicateurs présents dans modalities (.e. : p-valeurs, statistiques, etc.) ainsi que des variables qui n'ont pas de modalité (fréquence de la série et modèle ARIMA). le paramètre score_formula est initié à NULL : il contiendra la formule utilisée pour calculer le score (si le calcul est fait).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_QR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction d'un bilan qualité — fr-extract_QR","text":"","code":"# Chemin menant au fichier demetra_m.csv demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extraire le bilan qualité à partir du fichier demetra_m.csv QR <- extract_QR(demetra_path)  print(QR) #> The quality report matrix has 13 observations #> There are 18 indicators in the modalities matrix and 20 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model #>  #> No score was calculated  # Extraire les modalités de la matrice QR$modalities #>    series qs_residual_sa_on_sa f_residual_sa_on_sa qs_residual_sa_on_i #> 1  RF0610                 Good                Good                Good #> 2  RF0620                 Good                Good                Good #> 3  RF0811                 Good                Good                Good #> 4  RF0812                 Good                Good                Good #> 5  RF0893                 Good                Good                Good #> 6  RF0899                 Good                Good                Good #> 7  RF1011               Severe                Good              Severe #> 8  RF1012               Severe                Good              Severe #> 9  RF1013                  Bad                Good           Uncertain #> 10 RF1020               Severe                Good              Severe #> 11 RF1031                  Bad                Good                 Bad #> 12 RF1032                 Good                Good                Good #> 13 RF1039               Severe                Good              Severe #>    f_residual_sa_on_i f_residual_td_on_sa f_residual_td_on_i #> 1                Good                 Bad          Uncertain #> 2                Good                Good               Good #> 3                Good              Severe                Bad #> 4                Good              Severe             Severe #> 5                Good                Good               Good #> 6                Good                 Bad                Bad #> 7                Good              Severe             Severe #> 8                Good              Severe             Severe #> 9                Good              Severe             Severe #> 10               Good              Severe             Severe #> 11               Good           Uncertain          Uncertain #> 12               Good              Severe             Severe #> 13               Good              Severe             Severe #>    residuals_independency residuals_normality residuals_homoskedasticity #> 1                    Good                Good                       Good #> 2                    Good                 Bad                        Bad #> 3                     Bad                 Bad                        Bad #> 4                     Bad                Good                       Good #> 5               Uncertain                Good                       Good #> 6                     Bad                Good                       Good #> 7                     Bad                Good                       Good #> 8                     Bad                Good                       Good #> 9                     Bad                 Bad                        Bad #> 10                    Bad           Uncertain                       Good #> 11                    Bad                 Bad                  Uncertain #> 12                    Bad                Good                       Good #> 13                    Bad                 Bad                  Uncertain #>    residuals_skewness residuals_kurtosis  oos_mean   oos_mse   m7    q q_m2 #> 1                Good               Good      Good       Bad Good Good Good #> 2                 Bad                Bad       Bad       Bad Good Good Good #> 3                 Bad                Bad      Good Uncertain Good  Bad  Bad #> 4                Good               Good      Good      Good Good Good Good #> 5                Good               Good       Bad      Good Good  Bad  Bad #> 6                Good               Good       Bad      Good Good Good Good #> 7                Good               Good      Good      Good Good  Bad  Bad #> 8                Good               Good       Bad      Good Good  Bad  Bad #> 9                 Bad                Bad       Bad      Good  Bad  Bad  Bad #> 10               Good               Good       Bad Uncertain Good Good  Bad #> 11          Uncertain          Uncertain Uncertain       Bad Good Good Good #> 12               Good               Good       Bad      Good Good  Bad  Bad #> 13          Uncertain          Uncertain       Bad Uncertain Good Good Good #>    pct_outliers #> 1     Uncertain #> 2           Bad #> 3          Good #> 4          Good #> 5          Good #> 6          Good #> 7          Good #> 8          Good #> 9          Good #> 10         Good #> 11    Uncertain #> 12         Good #> 13         Good # Or: QR[[\"modalities\"]] #>    series qs_residual_sa_on_sa f_residual_sa_on_sa qs_residual_sa_on_i #> 1  RF0610                 Good                Good                Good #> 2  RF0620                 Good                Good                Good #> 3  RF0811                 Good                Good                Good #> 4  RF0812                 Good                Good                Good #> 5  RF0893                 Good                Good                Good #> 6  RF0899                 Good                Good                Good #> 7  RF1011               Severe                Good              Severe #> 8  RF1012               Severe                Good              Severe #> 9  RF1013                  Bad                Good           Uncertain #> 10 RF1020               Severe                Good              Severe #> 11 RF1031                  Bad                Good                 Bad #> 12 RF1032                 Good                Good                Good #> 13 RF1039               Severe                Good              Severe #>    f_residual_sa_on_i f_residual_td_on_sa f_residual_td_on_i #> 1                Good                 Bad          Uncertain #> 2                Good                Good               Good #> 3                Good              Severe                Bad #> 4                Good              Severe             Severe #> 5                Good                Good               Good #> 6                Good                 Bad                Bad #> 7                Good              Severe             Severe #> 8                Good              Severe             Severe #> 9                Good              Severe             Severe #> 10               Good              Severe             Severe #> 11               Good           Uncertain          Uncertain #> 12               Good              Severe             Severe #> 13               Good              Severe             Severe #>    residuals_independency residuals_normality residuals_homoskedasticity #> 1                    Good                Good                       Good #> 2                    Good                 Bad                        Bad #> 3                     Bad                 Bad                        Bad #> 4                     Bad                Good                       Good #> 5               Uncertain                Good                       Good #> 6                     Bad                Good                       Good #> 7                     Bad                Good                       Good #> 8                     Bad                Good                       Good #> 9                     Bad                 Bad                        Bad #> 10                    Bad           Uncertain                       Good #> 11                    Bad                 Bad                  Uncertain #> 12                    Bad                Good                       Good #> 13                    Bad                 Bad                  Uncertain #>    residuals_skewness residuals_kurtosis  oos_mean   oos_mse   m7    q q_m2 #> 1                Good               Good      Good       Bad Good Good Good #> 2                 Bad                Bad       Bad       Bad Good Good Good #> 3                 Bad                Bad      Good Uncertain Good  Bad  Bad #> 4                Good               Good      Good      Good Good Good Good #> 5                Good               Good       Bad      Good Good  Bad  Bad #> 6                Good               Good       Bad      Good Good Good Good #> 7                Good               Good      Good      Good Good  Bad  Bad #> 8                Good               Good       Bad      Good Good  Bad  Bad #> 9                 Bad                Bad       Bad      Good  Bad  Bad  Bad #> 10               Good               Good       Bad Uncertain Good Good  Bad #> 11          Uncertain          Uncertain Uncertain       Bad Good Good Good #> 12               Good               Good       Bad      Good Good  Bad  Bad #> 13          Uncertain          Uncertain       Bad Uncertain Good Good Good #>    pct_outliers #> 1     Uncertain #> 2           Bad #> 3          Good #> 4          Good #> 5          Good #> 6          Good #> 7          Good #> 8          Good #> 9          Good #> 10         Good #> 11    Uncertain #> 12         Good #> 13         Good"},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Extraction du score — fr-extract_score","title":"Extraction du score — fr-extract_score","text":"Permet d'extraire le score des objets QR_matrix ou mQR_matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extraction du score — fr-extract_score","text":"x objet de type QR_matrix ou mQR_matrix. format_output chaîne de caractères indiquant le format de l'objet en sortie : soit un data.frame soit un vector. weighted_score booléen indiquant s'il faut extraire le score pondéré (s'il existe) ou le score non pondéré. Par défaut, c'est le score non pondéré qui est extrait.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extraction du score — fr-extract_score","text":"extract_score() renvoie un data.frame avec deux colonnes : le nom de la série et son score.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_score.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extraction du score — fr-extract_score","text":"Pour les objets QR_matrix, le score renvoyé est soit l'objet NULL si aucun score n'été calculé, soit un vecteur. Pour les objets mQR_matrix, c'est une liste de scores (NULL ou un vecteur).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-extract_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extraction du score — fr-extract_score","text":"","code":"# Chemin menant au fichier demetra_m.csv demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extraire le bilan qualité à partir du fichier demetra_m.csv QR <- extract_QR(demetra_path)  # Calculer le score QR1 <- compute_score(x = QR, n_contrib_score = 5) QR2 <- compute_score(     x = QR,     score_pond = c(qs_residual_sa_on_sa = 5, qs_residual_sa_on_i = 30,                    f_residual_td_on_sa = 10, f_residual_td_on_i = 40,                    oos_mean = 30, residuals_skewness = 15, m7 = 25) ) mQR <- mQR_matrix(list(a = QR1, b = QR2))  # Extraire les scores extract_score(QR1) #>    series score #> 1  RF0610   140 #> 2  RF0620   105 #> 3  RF0811   280 #> 4  RF0812   245 #> 5  RF0893    75 #> 6  RF0899   240 #> 7  RF1011   460 #> 8  RF1012   505 #> 9  RF1013   460 #> 10 RF1020   515 #> 11 RF1031   300 #> 12 RF1032   305 #> 13 RF1039   510 extract_score(mQR) #> $a #>    series score #> 1  RF0610   140 #> 2  RF0620   105 #> 3  RF0811   280 #> 4  RF0812   245 #> 5  RF0893    75 #> 6  RF0899   240 #> 7  RF1011   460 #> 8  RF1012   505 #> 9  RF1013   460 #> 10 RF1020   515 #> 11 RF1031   300 #> 12 RF1032   305 #> 13 RF1039   510 #>  #> $b #>    series score #> 1  RF0610    70 #> 2  RF0620   135 #> 3  RF0811   205 #> 4  RF0812   200 #> 5  RF0893    90 #> 6  RF0899   240 #> 7  RF1011   340 #> 8  RF1012   430 #> 9  RF1013   455 #> 10 RF1020   430 #> 11 RF1031   200 #> 12 RF1032   290 #> 13 RF1039   445 #>"},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-print.QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Affichage des objets QR_matrix et mQR_matrix — fr-print.QR_matrix","title":"Affichage des objets QR_matrix et mQR_matrix — fr-print.QR_matrix","text":"Pour afficher un objet QR_matrix ou mQR_matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-print.QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affichage des objets QR_matrix et mQR_matrix — fr-print.QR_matrix","text":"x objet de type mQR_matrix ou mQR_matrix. print_variables booléen pour imprimer ou non les noms des indicateurs (supplémentaire inclus). print_score_formula booléen pour imprimer ou non la formule qui servi à calculer le score (le cas échéant). score_statistics booléen pour imprimer ou non des statistiques sur les scores de la mQR_matrix (le cas échéant). ... autres arguments non utilisés.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-print.QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Affichage des objets QR_matrix et mQR_matrix — fr-print.QR_matrix","text":"la méthode print imprime un objet mQR_matrix ou mQR_matrix et le renvoie de manière invisible (via invisible(x)).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-rbind.QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Combiner par ligne des objets QR_matrix — fr-rbind.QR_matrix","title":"Combiner par ligne des objets QR_matrix — fr-rbind.QR_matrix","text":"Permet de combiner plusieurs objets QR_matrix en combinant par ligne les paramètres modalities et values.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-rbind.QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combiner par ligne des objets QR_matrix — fr-rbind.QR_matrix","text":"... objets QR_matrix à combiner. check_formula booléen indiquant s'il faut vérifier la cohérence dans les formules de calcul du score. Par défaut, check_formula = TRUE : la fonction renvoie une erreur si des scores sont calculés avec des formules différentes. Si check_formula = FALSE, alors il n'y pas de vérification et le paramètre score_formula de l'objet en sortie est NULL.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-rbind.QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combiner par ligne des objets QR_matrix — fr-rbind.QR_matrix","text":"rbind.QR_matrix() renvoie un objet QR_matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-rbind.QR_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combiner par ligne des objets QR_matrix — fr-rbind.QR_matrix","text":"","code":"# Chemin menant au fichier demetra_m.csv demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extraire le bilan qualité à partir du fichier demetra_m.csv QR <- extract_QR(demetra_path)  # Calculer differents scores QR1 <- compute_score(QR, score_pond = c(m7 = 2, q = 3, qs_residual_sa_on_sa = 5)) QR2 <- compute_score(QR, score_pond = c(m7 = 2, qs_residual_sa_on_sa = 5))  # Fusionner 2 bilans qualité try(rbind(QR1, QR2)) # Une erreur est renvoyée #> Error in rbind(deparse.level, ...) :  #>   All QR_matrices must have the same score formulas rbind(QR1, QR2, check_formula = FALSE) #> The quality report matrix has 26 observations #> There are 19 indicators in the modalities matrix and 21 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model  score #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model #>  #> The smallest score is 0 and the greatest is 30 #> The average score is 11 and its standard deviation is 10.8995"},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-recode_indicator_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Ré-encodage en modalités des variables — fr-recode_indicator_num","title":"Ré-encodage en modalités des variables — fr-recode_indicator_num","text":"Permet d'encoder des variables présentes dans la matrice des valeurs en modalités ajoutables à la matrice des modalités.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-recode_indicator_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ré-encodage en modalités des variables — fr-recode_indicator_num","text":"x objet de type QR_matrix ou mQR_matrix. variable_name vecteur de chaînes de caractères contenant les noms des variables à recoder. breaks voir l'argument éponyme de la fonction cut. labels voir l'argument éponyme de la fonction cut. ... autres paramètres de la fonction cut.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-recode_indicator_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ré-encodage en modalités des variables — fr-recode_indicator_num","text":"La fonction recode_indicator_num() renvoie le même objet, enrichi de l'indicateur choisi. Ainsi, si l'entrée x est une matrice QR_matrix, un objet de classe QR_matrix est renvoyé. Si le code d'entrée x est une matrice mQR, un objet de la classe mQR_matrix est renvoyé.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-remove_indicators.html","id":null,"dir":"Reference","previous_headings":"","what":"Manipulation de la liste des indicateurs — fr-remove_indicators","title":"Manipulation de la liste des indicateurs — fr-remove_indicators","text":"Permet de retirer des indicateurs (fonction remove_indicators()) ou de n'en retenir que certains (fonction retain_indicators()) d'objets QR_matrix ou mQR_matrix. Le nom des séries (colonne \"series\") ne peut être enlevé.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-remove_indicators.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manipulation de la liste des indicateurs — fr-remove_indicators","text":"x objet de type QR_matrix ou mQR_matrix. ... noms des variables à retirer (ou conserver).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-remove_indicators.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manipulation de la liste des indicateurs — fr-remove_indicators","text":"remove_indicators() renvoie le même objet x réduit par les drapeaux et les variables utilisés comme arguments ... Donc si l'entrée x est une matrice QR_matrix, un objet de la classe QR_matrix est renvoyé. Si le code d'entrée x est une matrice mQR, un objet de la classe mQR_matrix est renvoyé.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-remove_indicators.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manipulation de la liste des indicateurs — fr-remove_indicators","text":"","code":"# Chemin menant au fichier demetra_m.csv demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extraire le bilan qualité à partir du fichier demetra_m.csv QR <- extract_QR(demetra_path)  # Calculer le score QR <- compute_score(x = QR, n_contrib_score = 5)  # Retenir certains indicateurs retain_indicators(QR, \"score\", \"m7\") # Retiens les indicateurs \"score\" et \"m7\" #> The quality report matrix has 13 observations #> There are 3 indicators in the modalities matrix and 3 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  m7  score #>  #> There's no additionnal variable in the values matrix #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2 retain_indicators(QR, c(\"score\", \"m7\")) # Pareil #> The quality report matrix has 13 observations #> There are 3 indicators in the modalities matrix and 3 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  m7  score #>  #> There's no additionnal variable in the values matrix #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2  # Retirer des indicateurs QR <- remove_indicators(QR, \"score\") # removing \"score\"  extract_score(QR) # est NULL car l'indicateur \"score a été retiré #> NULL"},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-sort.QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Tri des objets QR_matrix et mQR_matrix — fr-sort.QR_matrix","title":"Tri des objets QR_matrix et mQR_matrix — fr-sort.QR_matrix","text":"Permet de trier les bilans qualité en fonction d'une ou plusieurs variables.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-sort.QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tri des objets QR_matrix et mQR_matrix — fr-sort.QR_matrix","text":"x objet de type QR_matrix ou mQR_matrix. decreasing booléen indiquant si les bilans qualité doivent être triés par ordre croissant ou décroissant. Par défaut, le tri est effectué par ordre croissant. sort_variables variables à utiliser pour le tri. Elles doivent être présentes dans les tables de modalités. ... autres paramètres de la fonction order (non utilisés pour l'instant).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-sort.QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tri des objets QR_matrix et mQR_matrix — fr-sort.QR_matrix","text":"L'objet en entrée avec les tables de bilan qualité triées.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-sort.QR_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tri des objets QR_matrix et mQR_matrix — fr-sort.QR_matrix","text":"","code":"# Chemin menant au fichier demetra_m.csv demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extraire le bilan qualité à partir du fichier demetra_m.csv QR <- extract_QR(demetra_path)  # Calculer le score QR <- compute_score(QR, n_contrib_score = 2) print(QR$modalities$score) #>  [1] 140 105 280 245  75 240 460 505 460 515 300 305 510  # Trier les scores  # Pour trier par ordre croissant sur le score QR <- sort(QR, sort_variables = \"score\") print(QR$modalities$score) #>  [1]  75 105 140 240 245 280 300 305 460 460 505 510 515"},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-weighted_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calcul d'un score pondéré pour chaque observation — fr-weighted_score","title":"Calcul d'un score pondéré pour chaque observation — fr-weighted_score","text":"Permet de pondérer un score déjà calculé en fonction de variables.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-weighted_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calcul d'un score pondéré pour chaque observation — fr-weighted_score","text":"x objet de type QR_matrix ou mQR_matrix. pond pondération à appliquer au score. Il peut s'agir d'un nombre, d'un vecteur de nombres, du nom d'une des variables du bilan qualité ou d'une liste de pondérations pour les objets mQR_matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-weighted_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calcul d'un score pondéré pour chaque observation — fr-weighted_score","text":"L'objet en entrée avec le score recalculé","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/fr-weighted_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calcul d'un score pondéré pour chaque observation — fr-weighted_score","text":"","code":"# Chemin menant au fichier demetra_m.csv demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extraire le bilan qualité à partir du fichier demetra_m.csv QR <- extract_QR(demetra_path)  # Calculer le score QR <- compute_score(QR, n_contrib_score = 2) print(QR) #> The quality report matrix has 13 observations #> There are 19 indicators in the modalities matrix and 23 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model  score  1_highest_contrib_score  2_highest_contrib_score #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model  1_highest_contrib_score  2_highest_contrib_score #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2  # Pondérer le score QR <- weighted_score(QR, 2) print(QR) #> The quality report matrix has 13 observations #> There are 20 indicators in the modalities matrix and 24 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model  score  1_highest_contrib_score  2_highest_contrib_score  score_pond #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model  1_highest_contrib_score  2_highest_contrib_score #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2  # Extraire le score pondéré QR$modalities$score_pond #>  [1]  280  210  560  490  150  480  920 1010  920 1030  600  610 1020"},{"path":"https://inseefr.github.io/JDCruncheR/reference/get_thresholds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all (default) thresholds — get_thresholds","title":"Get all (default) thresholds — get_thresholds","text":"Get (default) thresholds","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/get_thresholds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all (default) thresholds — get_thresholds","text":"","code":"get_thresholds(test_name, default = TRUE)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/get_thresholds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all (default) thresholds — get_thresholds","text":"test_name String. name test get. default Boolean. (default TRUE) TRUE, default threshold returned. FALSE current used thresholds.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/get_thresholds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all (default) thresholds — get_thresholds","text":"test_name missing, threshold returned.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/get_thresholds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all (default) thresholds — get_thresholds","text":"","code":"# Get all default thresholds get_thresholds(default = TRUE) #> $qs_residual_sa_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $qs_residual_sa_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_sa_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_sa_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_td_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_td_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $residuals_independency #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_homoskedasticity #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_skewness #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_kurtosis #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_normality #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $oos_mean #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $oos_mse #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $m7 #>   Good    Bad Severe  #>      1      2    Inf  #>  #> $q #> Good  Bad  #>    1  Inf  #>  #> $q_m2 #> Good  Bad  #>    1  Inf  #>  #> $pct_outliers #>      Good Uncertain       Bad  #>         3         5       Inf  #>   # Get all current thresholds get_thresholds(default = FALSE) #> $qs_residual_sa_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $qs_residual_sa_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_sa_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_sa_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_td_on_sa #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $f_residual_td_on_i #>    Severe       Bad Uncertain      Good  #>     0.001     0.010     0.050       Inf  #>  #> $residuals_independency #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_homoskedasticity #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_skewness #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_kurtosis #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $residuals_normality #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $oos_mean #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $oos_mse #>       Bad Uncertain      Good  #>      0.01      0.10       Inf  #>  #> $m7 #>   Good    Bad Severe  #>      1      2    Inf  #>  #> $q #> Good  Bad  #>    1  Inf  #>  #> $q_m2 #> Good  Bad  #>    1  Inf  #>  #> $pct_outliers #>      Good Uncertain       Bad  #>         3         5       Inf  #>   # Get all current thresholds get_thresholds(test_name = \"oos_mean\", default = FALSE) #>       Bad Uncertain      Good  #>      0.01      0.10       Inf"},{"path":"https://inseefr.github.io/JDCruncheR/reference/print.QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing QR_matrix and mQR_matrix objects — print.QR_matrix","title":"Printing QR_matrix and mQR_matrix objects — print.QR_matrix","text":"print information QR_matrix mQR_matrix object.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/print.QR_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing QR_matrix and mQR_matrix objects — print.QR_matrix","text":"","code":"# S3 method for class 'QR_matrix' print(x, print_variables = TRUE, print_score_formula = TRUE, ...)  # S3 method for class 'mQR_matrix' print(x, score_statistics = TRUE, ...)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/print.QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing QR_matrix and mQR_matrix objects — print.QR_matrix","text":"x mQR_matrix mQR_matrix object. print_variables logical indicating whether print indicators' name (including additionnal variables). print_score_formula logical indicating whether print formula score calculated (calculated). ... unused arguments. score_statistics logical indicating whether print statistics mQR_matrix scores (calculated).","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/print.QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing QR_matrix and mQR_matrix objects — print.QR_matrix","text":"print method prints mQR_matrix mQR_matrix object returns invisibly (via invisible(x)).","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/rbind.QR_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Combining QR_matrix objects — rbind.QR_matrix","title":"Combining QR_matrix objects — rbind.QR_matrix","text":"Function combine multiple QR_matrix objects: line line, modalities values table.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/rbind.QR_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combining QR_matrix objects — rbind.QR_matrix","text":"","code":"# S3 method for class 'QR_matrix' rbind(..., check_formula = TRUE)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/rbind.QR_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combining QR_matrix objects — rbind.QR_matrix","text":"... QR_matrix objects combine. check_formula logical indicating whether check score formulas' coherency. default, check_formula = TRUE: error returned scores calculated different formulas. check_formula = FALSE, check performed score_formula output NULL.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/rbind.QR_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combining QR_matrix objects — rbind.QR_matrix","text":"rbind.QR_matrix() returns QR_matrix object.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/rbind.QR_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combining QR_matrix objects — rbind.QR_matrix","text":"","code":"# Path of matrix demetra_m demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extract the quality report from the demetra_m file QR <- extract_QR(demetra_path)  # Compute differents scores QR1 <- compute_score(QR, score_pond = c(m7 = 2, q = 3, qs_residual_sa_on_sa = 5)) QR2 <- compute_score(QR, score_pond = c(m7 = 2, qs_residual_sa_on_sa = 5))  # Merge two quality report try(rbind(QR1, QR2)) # Une erreur est renvoyée #> Error in rbind(deparse.level, ...) :  #>   All QR_matrices must have the same score formulas rbind(QR1, QR2, check_formula = FALSE) #> The quality report matrix has 26 observations #> There are 19 indicators in the modalities matrix and 21 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model  score #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model #>  #> The smallest score is 0 and the greatest is 30 #> The average score is 11 and its standard deviation is 10.8995"},{"path":"https://inseefr.github.io/JDCruncheR/reference/recode_indicator_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Converting ","title":"Converting ","text":"transform variables values matrix categorical variables can added modalities matrix.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/recode_indicator_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converting ","text":"","code":"recode_indicator_num(   x,   variable_name,   breaks = c(0, 0.01, 0.05, 0.1, 1),   labels = c(\"Good\", \"Uncertain\", \"Bad\", \"Severe\"),   ... )"},{"path":"https://inseefr.github.io/JDCruncheR/reference/recode_indicator_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converting ","text":"x QR_matrix mQR_matrix object. variable_name vector strings containing names variables convert. breaks see function cut. labels see function cut. ... parameters cut function.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/recode_indicator_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converting ","text":"function recode_indicator_num() returns object, enhanced chosen indicator. input x QR_matrix, object class QR_matrix returned. input x mQR_matrix, object class mQR_matrix returned.","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/set_thresholds.html","id":null,"dir":"Reference","previous_headings":"","what":"Set values for thresholds — set_thresholds","title":"Set values for thresholds — set_thresholds","text":"Set values thresholds","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/set_thresholds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set values for thresholds — set_thresholds","text":"","code":"set_thresholds(test_name, thresholds)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/set_thresholds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set values for thresholds — set_thresholds","text":"test_name String. name test update. thresholds Named vector numerics. upper values break threshold.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/set_thresholds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set values for thresholds — set_thresholds","text":"test_name missing, argument thresholds used thresholds updated default values. test_name missing, argument thresholds missing thresholds test test_name updated default values. Finally, test_name thresholds missing, thresholds test test_name updated value thresholds.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/set_thresholds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set values for thresholds — set_thresholds","text":"","code":"# Set \"m7\" set_thresholds(     test_name = \"m7\",     thresholds = c(Good = 0.8, Bad = 1.4, Severe = Inf) )  # Set \"oos_mean\" to default set_thresholds(test_name = \"oos_mean\")  # Set all thresholds to default set_thresholds()"},{"path":"https://inseefr.github.io/JDCruncheR/reference/sort.html","id":null,"dir":"Reference","previous_headings":"","what":"QR_matrix and mQR_matrix sorting — sort","title":"QR_matrix and mQR_matrix sorting — sort","text":"sort quality reports one several variables","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QR_matrix and mQR_matrix sorting — sort","text":"","code":"# S3 method for class 'QR_matrix' sort(x, decreasing = FALSE, sort_variables = \"score\", ...)  # S3 method for class 'mQR_matrix' sort(x, decreasing = FALSE, sort_variables = \"score\", ...)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QR_matrix and mQR_matrix sorting — sort","text":"x QR_matrix mQR_matrix object decreasing logical indicating whether quality reports must sorted ascending decreasing order. default, sorting done ascending order. sort_variables must present modalities table. ... parameters function order (unused now)","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/sort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QR_matrix and mQR_matrix sorting — sort","text":"input sorted quality reports","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/sort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"QR_matrix and mQR_matrix sorting — sort","text":"","code":"# Path of matrix demetra_m demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extract the quality report from the demetra_m file QR <- extract_QR(demetra_path)  # Compute the score QR <- compute_score(QR, n_contrib_score = 2) print(QR$modalities$score) #>  [1] 140 105 280 245  75 240 460 505 460 515 300 305 510  # Sort the scores  # To sort by ascending scores QR <- sort(QR, sort_variables = \"score\") print(QR$modalities$score) #>  [1]  75 105 140 240 245 280 300 305 460 460 505 510 515"},{"path":"https://inseefr.github.io/JDCruncheR/reference/weighted_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted score calculation — weighted_score","title":"Weighted score calculation — weighted_score","text":"Function weight pre-calculated score","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/weighted_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted score calculation — weighted_score","text":"","code":"weighted_score(x, pond = 1)"},{"path":"https://inseefr.github.io/JDCruncheR/reference/weighted_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted score calculation — weighted_score","text":"x QR_matrix mQR_matrix object pond weights use. Can integer, vector integers, name one quality report variables list weights mQR_matrix objects.","code":""},{"path":"https://inseefr.github.io/JDCruncheR/reference/weighted_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted score calculation — weighted_score","text":"input additionnal weighted score","code":""},{"path":[]},{"path":"https://inseefr.github.io/JDCruncheR/reference/weighted_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted score calculation — weighted_score","text":"","code":"# Path of matrix demetra_m demetra_path <- file.path(     system.file(\"extdata\", package = \"JDCruncheR\"),     \"WS/ws_ipi/Output/SAProcessing-1\",     \"demetra_m.csv\" )  # Extract the quality report from the demetra_m file QR <- extract_QR(demetra_path)  # Compute the score QR <- compute_score(QR, n_contrib_score = 2)  # Weighted score QR <- weighted_score(QR, 2) print(QR) #> The quality report matrix has 13 observations #> There are 20 indicators in the modalities matrix and 24 indicators in the values matrix #>  #> The quality report matrix contains the following variables: #> series  qs_residual_sa_on_sa  f_residual_sa_on_sa  qs_residual_sa_on_i  f_residual_sa_on_i  f_residual_td_on_sa  f_residual_td_on_i  residuals_independency  residuals_normality  residuals_homoskedasticity  residuals_skewness  residuals_kurtosis  oos_mean  oos_mse  m7  q  q_m2  pct_outliers  frequency  arima_model  score  1_highest_contrib_score  2_highest_contrib_score  score_pond #>  #> The variables exclusively found in the values matrix are: #> frequency  arima_model  1_highest_contrib_score  2_highest_contrib_score #>  #> The smallest score is 75 and the greatest is 515 #> The average score is 318.462 and its standard deviation is 158.224 #>  #> The following formula was used to calculate the score: #> 30 * qs_residual_sa_on_sa + 30 * f_residual_sa_on_sa + 20 * qs_residual_sa_on_i + 20 * f_residual_sa_on_i + 30 * f_residual_td_on_sa + 20 * f_residual_td_on_i + 15 * oos_mean + 10 * oos_mse + 15 * residuals_independency + 5 * residuals_homoskedasticity + 5 * residuals_skewness + 5 * m7 + 5 * q_m2  # Extract the weighted score QR$modalities$score_pond #>  [1]  280  210  560  490  150  480  920 1010  920 1030  600  610 1020"}]
